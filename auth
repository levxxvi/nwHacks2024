
# pip3 install spotipy Flask Flask-Session
import spotipy
from spotipy.oauth2 import SpotifyClientCredentials
from flask import Flask ,redirect,request, render_template
import os
from datetime import datetime, timedelta
from flask_mysqldb import MySQL

import sys

app = Flask(__name__)
app.secret_key = 'sdaefascsasv'
app.config['CLIENT_ID'] = '9f8720c821a34ee7b1b881bea3257a50'
app.config['CLIENT_SECRET'] = 'da562de7e4394d559b22fa455bd7e005'
app.config['REDIRECT_URI'] = 'http://localhost:5000/callback'
app.config['AUTH_URL'] = 'https://accounts.spotify.com/authorize'
app.config['TOKEN_URL'] = 'https://accounts.spotify.com/api/token'
app.config['API_BASE_URL'] = 'https://api.spotify.com/v1'
app.config['MYSQL_HOST'] = 'localhost'
app.config['MYSQL_USER'] = 'root'
app.config['MYSQL_PASSWORD'] = ''
app.config['MYSQL_DB'] = 'nwhacks'

mysql = MySQL(app)

auth_manager = spotipy.oauth2.SpotifyOAuth(app.config['CLIENT_ID'],
                                               app.config['CLIENT_SECRET'],
                                               app.config['REDIRECT_URI'],
                                               scope='user-read-currently-playing playlist-modify-private user-read-recently-played',
                                               show_dialog=True)

@app.route('/')
def index():
    return render_template('home.html')

@app.route('/login')
def login():
    app.config['AUTH_URL'] = auth_manager.get_authorize_url()

    return redirect(app.config['AUTH_URL'])

@app.route('/callback')
def callback():
    if request.args.get("code"):
        auth_manager.get_access_token(request.args.get("code"))
        spotify = spotipy.Spotify(auth_manager=auth_manager)

        return redirect('/calendar')
    
@app.route('/update', methods = ['POST', 'GET'])
def update():
    arr = ["Happy", "Neutral", "Sad", "Angry", "Tired", "Stressed"]
    mood = request.args.get('data')
    while(mood not in arr):
        mood = request.args.get('data')
    now = datetime.now()
    cursor = mysql.connection.cursor()
    cursor.execute("UPDATE moodtracker SET Mood = %s limit 1", mood)
    mysql.connection.commit()
    cursor.close()
    return redirect('/calendar')
    
@app.route('/recentlyplayed')
def recentlyplayed():
    recently_played = auth_manager.current_user_recently_played(limit=500)


if __name__ == "__main__":
    app.run(debug=True)
    